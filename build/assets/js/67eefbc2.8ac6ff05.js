"use strict";(self.webpackChunkcryptopunks=self.webpackChunkcryptopunks||[]).push([[507],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),s=u(r),d=a,k=s["".concat(p,".").concat(d)]||s[d]||m[d]||l;return r?n.createElement(k,o(o({ref:t},c),{},{components:r})):n.createElement(k,o({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=s;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},2883:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const l={sidebar_position:5},o=void 0,i={unversionedId:"Local Graph Node",id:"Local Graph Node",title:"Local Graph Node",description:"Run your local Graph Node",source:"@site/docs/Local Graph Node.md",sourceDirName:".",slug:"/Local Graph Node",permalink:"/Local Graph Node",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Push Notifications",permalink:"/Push Notifications"},next:{title:"Helpful Resources",permalink:"/Helpful Resources"}},p={},u=[{value:"Run your local Graph Node",id:"run-your-local-graph-node",level:3},{value:"Logic for Transfers/Wraps",id:"logic-for-transferswraps",level:3},{value:"Build",id:"build",level:3},{value:"Deploy",id:"deploy",level:3}],c={toc:u};function m(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"run-your-local-graph-node"},"Run your local Graph Node"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ETHEREUM_RPC=mainnet:https://eth-mainnet.alchemyapi.io/v2/${YOUR_API_KEY}\n")),(0,a.kt)("p",null,"Run the command: ",(0,a.kt)("inlineCode",{parentName:"p"},"docker compose up")),(0,a.kt)("h3",{id:"logic-for-transferswraps"},"Logic for Transfers/Wraps"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Regular PunkTransfer"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"In handlePunkTransfer",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"decrement from"),(0,a.kt)("li",{parentName:"ul"},"increment to"),(0,a.kt)("li",{parentName:"ul"},"set owner"),(0,a.kt)("li",{parentName:"ul"},"create transfer event"))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Mint/Wrap"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"In handlePunkTransfer (to = WrappedPunkAddress):",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"decrement from"),(0,a.kt)("li",{parentName:"ul"},"In handleWrappedPunkTransfer (from = ZeroAddress):"),(0,a.kt)("li",{parentName:"ul"},"increment to"),(0,a.kt)("li",{parentName:"ul"},"set owner"),(0,a.kt)("li",{parentName:"ul"},"create Wrap event"))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Burn/Unwrap"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"In handlePunkTransfer (from = WrappedPunkAddress):"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"increment to"),(0,a.kt)("li",{parentName:"ul"},"set owner"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"In handleWrappedPunkTransfer (to = ZeroAddress):"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"decrement from"),(0,a.kt)("li",{parentName:"ul"},"create Unwrap event"))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Wrapped Transfer"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"In handleWrappedPunkTransfer:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"decrement from"),(0,a.kt)("li",{parentName:"ul"},"increment to"),(0,a.kt)("li",{parentName:"ul"},"set owner"),(0,a.kt)("li",{parentName:"ul"},"create Transfer event")))))),(0,a.kt)("h3",{id:"build"},"Build"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Initialize subgraph (Subgraph Studio):")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"graph init --product subgraph-studio\n--from-contract <CONTRACT_ADDRESS> [--network <ETHEREUM_NETWORK>] [--abi <FILE>] <SUBGRAPH_SLUG> [<DIRECTORY>]\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Initialize subgraph (Hosted Service):")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"graph init --product hosted-service --from-contract <CONTRACT_ADDRESS> <GITHUB_USER>/<SUBGRAPH_NAME>[<DIRECTORY>]\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Generate code from manifest and schema: ",(0,a.kt)("inlineCode",{parentName:"li"},"graph codegen")),(0,a.kt)("li",{parentName:"ul"},"Build subgraph: ",(0,a.kt)("inlineCode",{parentName:"li"},"graph build"))),(0,a.kt)("h3",{id:"deploy"},"Deploy"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Authenticate (just once): ",(0,a.kt)("inlineCode",{parentName:"li"},"graph auth --product hosted-service <ACCESS_TOKEN>")),(0,a.kt)("li",{parentName:"ul"},"Deploy to Subgraph Studio: ",(0,a.kt)("inlineCode",{parentName:"li"},"graph deploy --studio <SUBGRAPH_NAME>")),(0,a.kt)("li",{parentName:"ul"},"Deploy to Hosted Service: ",(0,a.kt)("inlineCode",{parentName:"li"},"graph deploy --product hosted-service <GITHUB_USER>/<SUBGRAPH_NAME>"))))}m.isMDXComponent=!0}}]);